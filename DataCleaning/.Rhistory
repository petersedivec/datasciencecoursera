demo()
library(ggplot2)
install.package(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
search()
find_rtools()
library(devtools)
.lipPaths()
.libPaths()
install.packages("kernsmooth")
install.packages("KernSmooth")
library(KernSmooth)
search()
search(KernSmooth)
search(2)
search()
?search
?ggplot2
??ggplot2
install.packages(devtools)
find.package("devtools")
install.packages("devtools")
library("devtools")
find_rtools()
library(shiny)
shiny::runApp('C:/Tools/RStudio/R/library/311_shiny')
quit()
installed_packages
quit()
installed_packages
installed_packages()
?rownames
quit()
setwd("~/GitHub/datasciencecoursera/DataCleaning")
mds <- read.csv("./data/2006microdataSurvey.csv")
colnames(mds)
?strsplit
strsplit(mds, "wgtp")
strsplit(colnames(mds), "wgtp")
names(mds)
class(names(mds))
strsplit(names(mds), "wgtp")
strsplit(names(mds), "wgtp")[123,]
strsplit(names(mds), "wgtp")[123]
fileURL<="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileURL, destfile = "./getdata_data_FGDP.csv")
download.file(fileURL, destfile = "./data/getdata_data_FGDP.csv")
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileURL, destfile = "./data/getdata_data_FGDP.csv")
gdp<-read.csv("./data/getdata_data_FGDP.csv")
head(gdp)
str(gdp)
GDP$X.3 <- as.numeric.factor(GDP$X.3)
gdp$X.3 <- as.numeric.factor(gdp$X.3)
head(gdp)
mean(gdp$X.3)
?mean
mean(gdp$X.3, na.rm=T)
gdp$X.3
?complete.cases
gdp<-complete.cases(gdp)
gdp<-read.csv("./data/getdata_data_FGDP.csv")
gdp<-gdp[complete.cases(gdp),]
gdp<-read.csv("./data/getdata_data_FGDP.csv")
complete.cases(gdp)
head(gdp)
complete.cases(gdp$X.3)
gdp$X.3
gdp$X.3 <- as.numeric.factor(gdp$X.3)
gdp<-gdp[complete.cases(gdp$X.3),]
mean(gdp$X.3)
head(gdp)
sum(gdp$X.3)/204
sum(gdp$X.3)/190
head(gdp,50)
sum(gdp$X.3)
mean(gdp$X.3)
tail(gdp$X.3)
tail(gdp,15)
tail(gdp,20)
is.numeric(gdp$Gross.domestic.product.2012)
gdp$Gross.domestic.product.2012
gdp$Gross.domestic.product.2012[-1]
gdp$Gross.domestic.product.2012[1]
gdp$Gross.domestic.product.2012[204
gdp$Gross.domestic.product.2012[203]
gdp$Gross.domestic.product.2012[203]
gdp$Gross.domestic.product.2012[202]
gdp$Gross.domestic.product.2012[201]
tail(gdp,20)
grep("^United",gdp$X.2)
gdp$X.2[grep("^United",gdp$X.2),]
gdp[grep("^United",gdp$X.2),]
str(gdp)
gdp[Gross.domestic.product.2012>10]
gdp[Gross.domestic.product.2012>10,]
gdp[gdp$Gross.domestic.product.2012>10,]
gdp[gdp$Gross.domestic.product.2012>10]
gdp$Gross.domestic.product.2012
length(gdp$Gross.domestic.product.2012)
which(gdp$Gross.domestic.product.2012=='')
!which(gdp$Gross.domestic.product.2012=='')
countries <- gdp[-which(gdp$Gross.domestic.product.2012==''),]
tail(countries, )
mean(gdp$X.3,na.rm = T)
mean(countries$X.3,na.rm = T)
fileURL2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileURL2, destfile = "./data/EDU.csv")
EDU <- read.csv("./data/EDU.csv")
names(EDU)
head(EDU)
head(EDU$National.accounts.base.year)
head(EDU$National.accounts.base.year,20)
head(EDU$National.accounts.reference.year)
head(EDU$IMF.data.dissemination.standar,20)
head(EDU[,1:5],20)
head(EDU[,6:10],20)
names(EDU)
head(EDU[,10],20)
?grep
grep('[jJ]une', EDU$Special.Notes)
EDU[snJune,c(1,10)]
snJune <- grep('[jJ]une', EDU$Special.Notes)
EDU[snJune,c(1,10)]
snJune <- grep('end: [jJ]une', EDU$Special.Notes)
EDU[snJune,c(1,10)]
length(snJune)
?match
colnames(GDP)[c(1,2,4,5)] = c("shortCode","Rank","Country","GDP")
colnames(gdp)[c(1,2,4,5)] = c("shortCode","Rank","Country","GDP")
GDPEDU <- merge(gdp, EDU, by.x="shortCode", by.y="CountryCode")
colnames(gdpedu)
colnames(GDPEDU)
snJune <- grep('end: [jJ]une', GDPEDU$Special.Notes)
GDPEDU[snJune,c(1,10)]
GDPEDU[snJune,c('Country','Special.Notes')]
length(snJune)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
head(amzn)
class(sampleTimes)
format(head(sampleTimes),"%a %b %d")
format(head(sampleTimes),"%a %b %d, %Y")
vals2012 <- grep(lngDate, ", 2012")
lngDate <-format(sampleTimes,"%a %b %d, %Y")
vals2012 <- grep(lngDate, ", 2012")
vals2012 <- grep(", 2012", lngDate)
length(vals2012)
mons2012 <- grep("Mon", lngDate[vals2012])
mons2012
length(mons2012)
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.
# It will check for newer versions, and if one is available, will guide you
# through the decisions you'd need to make.
exit
exit()
quit
quit()
