demo()
library(ggplot2)
install.package(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
search()
find_rtools()
library(devtools)
.lipPaths()
.libPaths()
install.packages("kernsmooth")
install.packages("KernSmooth")
library(KernSmooth)
search()
search(KernSmooth)
search(2)
search()
?search
?ggplot2
??ggplot2
install.packages(devtools)
find.package("devtools")
install.packages("devtools")
library("devtools")
find_rtools()
library(shiny)
shiny::runApp('C:/Tools/RStudio/R/library/311_shiny')
x<-c(rnorm(10),runif(10),rnorm(10,1))
x
str(x)
dim(x)
head(x)
head(x,12)
info(x)
info
?gl
f<-gl(3,10)
f
tapply(x,f,mean)
?split
airquality
names(airquality)
str(airquality)
?str
getwd()
setwd("~/GitHub/datasciencecoursera/Rprogramming/specdata")
?readcsv
?read.csv
t<-read.csv("specdata/001.csv")
t<-read.csv("specdata\001.csv")
t<-read.table("specdata\001.csv")
getwd()
cd ..
setwd("~/GitHub/datasciencecoursera/Rprogramming")
t<-read.table("specdata\001.csv")
t<-read.csv("specdata\001.csv")
t<-read.csv("specdata/001.csv")
t<-read.csv(paste("specdata/","001.csv")
)
("specdata/","001.csv")
paste("specdata/","001.csv")
paste("specdata/","001.csv",sep="")
"specdata/"+"001.csv"
?formatC
formatC(1,width=3,format="d",flag="0")
formatC(13,width=3,format="d",flag="0")
str(t)
head(t,30)
t[sulfate]
t$sulfate
t[[sulfate]]
t$sulfate
mean(t[,"sulfate"])
mean(t[,"sulfate"], na.rm=T)
t["sulfate"]
t[["sulfate"]]
mean(t[["sulfate"]],na.rm=T)
f <- function(fn) { paste("specdata/",formatC(fn,width=3,format="d",flag="0"),".csv",sep="")}
f(1:3)
t<-read.csv(f(1:3))
lapply(f(1:3), read.csv)
s<-lapply(f(1:3), read.csv)
d<-function(x,a) { mean(x[[a]], na.rm=T) }
d(t,"sulfate")
f(1:4)
class(f(1:4))
pollutantmean("specdata", "sulfate", 1:10)
getwd()
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# open directory, lapply in-line function to get mean
# f takes an id list and builds a character vector with file names
f <- function(fn) { paste(directory,"/",formatC(fn,width=3,format="d",flag="0"),".csv",sep="")}
# m takes a dataset and applies the mean function to it for a given p (pollutant) specified
m <- function(x,p) { mean(x[[p]], na.rm=T) }
# final step is to reduce this to a single array of means and take the mean of that
mean(sapply(sapply(id, f), m)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# open directory, lapply in-line function to get mean
# f takes an id list and builds a character vector with file names
f <- function(fn) { paste(directory,"/",formatC(fn,width=3,format="d",flag="0"),".csv",sep="")}
# m takes a dataset and applies the mean function to it for a given p (pollutant) specified
m <- function(x,p) { mean(x[[p]], na.rm=T) }
# final step is to reduce this to a single array of means and take the mean of that
mean(sapply(sapply(id, f), m))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# open directory, lapply in-line function to get mean
# f takes an id list and builds a character vector with file names
f <- function(fn) { paste(directory,"/",formatC(fn,width=3,format="d",flag="0"),".csv",sep="")}
# m takes a dataset and applies the mean function to it for a given p (pollutant) specified
m <- function(x,p) { mean(x[[p]], na.rm=T) }
# final step is to reduce this to a single array of means and take the mean of that
(sapply(id, f), m)
}
sapply(sapply(id, f), m)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# open directory, lapply in-line function to get mean
# f takes an id list and builds a character vector with file names
f <- function(fn) { paste(directory,"/",formatC(fn,width=3,format="d",flag="0"),".csv",sep="")}
# m takes a dataset and applies the mean function to it for a given p (pollutant) specified
m <- function(x,p) { mean(x[[p]], na.rm=T) }
# final step is to reduce this to a single array of means and take the mean of that
sapply(sapply(id, f), m)
}
pollutantmean("specdata", "sulfate", 1:10)
m <- function(x,p) { mean(x[[p]], na.rm=T) }
m(t,"sulfate")
sapply(s, m, p="sulfate")
mean(sapply(s, m, p="sulfate"))
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# open directory, lapply in-line function to get mean
# f takes an id list and builds a character vector with file names
f <- function(fn) { paste(directory,"/",formatC(fn,width=3,format="d",flag="0"),".csv",sep="")}
# m takes a dataset and applies the mean function to it for a given p (pollutant) specified
m <- function(x,p) { mean(x[[p]], na.rm=T) }
# final step is to reduce this to a single array of means and take the mean of that
mean(sapply(sapply(id, f), m, p=pollutant))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
debugSource('~/GitHub/datasciencecoursera/Rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
sapply(id, f)
sapply(sapply(id, f), m, p=pollutant)
pollutant
sapply(sapply(id, f), m, p="sulfate")
s<-lapply(f(1:10), read.csv)
s[1]
lapply(s,str)
lapply(s,head)
mean(sapply(s, m, p="sulfate"))
sapply(s, m, p="sulfate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# open directory, lapply in-line function to get mean
# f takes an id list and builds a character vector with file names
f <- function(fn) { paste(directory,"/",formatC(fn,width=3,format="d",flag="0"),".csv",sep="")}
# m takes a dataset and applies the mean function to it for a given p (pollutant) specified
m <- function(x,p) { mean(x[[p]], na.rm=T) }
# final step is to reduce this to a single array of means and take the mean of that
mean(sapply(lapply(lapply(id, f), read.csv), m, p=pollutant))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 70:72)
?nrow
?rbind
s
head(s)
lapply(s,head)
sapply(s,cbind)
b<-sapply(s,cbind)
m <- function(x,p) { x[[p]] }
b<-sapply(s,m)
b<-sapply(s,m, p="sulfate")
lapply(b,str)
lapply(b,head)
c<-lapply(b,rbind)
c<-lapply(split(b),rbind)
c<-sapply(b,rbind)
c[1]
c<-sapply(b,c)
remove c
remove(c)
c(1:2)
c(1:2, 33)
cc<-sapply(b,c)
sapply(cc,head)
class(b[[1]])
str(b[[1]])
c(b[[1]],b[[2]])
?split
?unsplit
c(b)
dd<-c(b)
head(dd)
sapply(dd,head)
?append
dd<-sapply(b,append)
?rle
?list
?unlist
dd<-unlist(b)
mean(dd,na.rm=T)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# open directory, lapply in-line function to get mean
# function f takes an id list and builds a character vector with file names
f <- function(fn) { paste(directory,"/",formatC(fn,width=3,format="d",flag="0"),".csv",sep="")}
# function m extracts the pollutant from a dataset
m <- function(x,p) { x[[p]] }
# pull out the data based on file ids, and pollutant
# data is a list of pollutant measurements at site ids
data<-lapply(lapply(lapply(id, f), read.csv), m, p=pollutant)
# final step is to combine all the values (unlist) and then take mean ignoring NAs
mean(unlist(data), na.rm=T)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
?round
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
list(pollutantmean("specdata", "nitrate", 23))
class(pollutantmean("specdata", "nitrate", 23))
is.character(pollutantmean("specdata", "nitrate", 23))
as.character(pollutantmean("specdata", "nitrate", 23))
source("rprog-scripts-submitscript1.R")
submit()
submit()
submit()
head(t)
head(t,50)
head(t,505)
complete.cases(t)
str(complete.cases(t))
sum(str(complete.cases(t)))
?complete
?complete.cases
?na.omit
class(t)
na.omit(t)
str(na.omit(t))
nrow(str(na.omit(t)))
nrow(na.omit(t))
f <- function(fn) { paste(directory,"/",formatC(fn,width=3,format="d",flag="0"),".csv",sep="")}
data<-lapply(lapply(id, f), read.csv)
f <- function(fn) { paste(directory,"/",formatC(fn,width=3,format="d",flag="0"),".csv",sep="")}
data<-lapply(lapply(1:3, f), read.csv)
f <- function(fn) { paste("specdata","/",formatC(fn,width=3,format="d",flag="0"),".csv",sep="")}
data<-lapply(lapply(1:3, f), read.csv)
lapply(data,head)
lapply(data,na.omit)
lapply(lapply(data,na.omit),nrow)
f <- function(fn) { paste("specdata","/",formatC(fn,width=3,format="d",flag="0"),".csv",sep="")}
data<-lapply(lapply(c(1,3,5), f), read.csv)
lapply(lapply(data,na.omit),nrow)
?tapply
df<-data.frame(c(1,3,5),lapply(lapply(data,na.omit),nrow))
df
str(df)
lapply(lapply(data,na.omit),nrow)
sapply(lapply(data,na.omit),nrow)
df<-data.frame(c(1,3,5),sapply(lapply(data,na.omit),nrow))
df
str(df)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
# function f takes an id list and builds a character vector with file names
f <- function(fn) { paste(directory,"/",formatC(fn,width=3,format="d",flag="0"),".csv",sep="")}
data<-lapply(lapply(id, f), read.csv)
nobs<-sapply(lapply(data,na.omit),nrow)
data.frame(id,nobs)
}
complete("specdata",1)
complete("specdata",c(2,4,8,10,12))
sumbit()
submit()
exit
exit()
