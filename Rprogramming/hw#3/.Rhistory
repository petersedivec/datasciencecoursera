demo()
library(ggplot2)
install.package(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
search()
find_rtools()
library(devtools)
.lipPaths()
.libPaths()
install.packages("kernsmooth")
install.packages("KernSmooth")
library(KernSmooth)
search()
search(KernSmooth)
search(2)
search()
?search
?ggplot2
??ggplot2
install.packages(devtools)
find.package("devtools")
install.packages("devtools")
library("devtools")
find_rtools()
library(shiny)
shiny::runApp('C:/Tools/RStudio/R/library/311_shiny')
setwd("~/GitHub/datasciencecoursera/Rprogramming/hw#3")
data<- read.csv("outcome-of-care-measures.csv", colClasses = "character")
colnames(data)
outcome=11
d<-subset(data, select=c(2, 7, outcomes[[sub(" ","_",outcome)]]))
d<-subset(data, select=c(2, 7, 11))
head(d)
head(d)
head(d,100)
d[,2]<-suppressWarnings(as.numeric(d[,2]))
d<-d[order(d[,2], d[3,], d[,1]),]
d<-d[complete.cases(d),]
head(d,100)
d
str(d)
d<-subset(data, select=c(2, 7, 11))
d[,2]<-suppressWarnings(as.numeric(d[,2]))
str(d)
summary(d)
d<-subset(data, select=c(2, 7, 11))
d[,3]<-suppressWarnings(as.numeric(d[,3]))
summary(d)
d<-d[complete.cases(d),]
summary(d)
head(d,100)
?tapply
d<-d[order(d[,2], d[3,], d[,1]),]
d<-d[order(d[,2], d[,3], d[,1]),]
head(d,100)
d$Hospital.Name
tapply(d[,3], d$State, min)
source('~/.active-rstudio-document')
tapply(d[,c(1,3)], d$State, besthospital)
besthospital <- function(x) {
x[1,1]
}
tapply(d[,c(1,3)], d$State, besthospital)
length(d[, c(1, 3)])
length(d$State)
?lapply
tapply(d$Hospital.Name, d$State, besthospital)
besthospital <- function(x) {
x[1]
}
tapply(d$Hospital.Name, d$State, besthospital)
str(tapply(d$Hospital.Name, d$State, besthospital))
p<-tapply(d$Hospital.Name, d$State, besthospital)
length(p)
size(p)
summary(p)
class(p)
dim(p)
size(p)
dim(p)
p[1]
p[2]
class(p[1])
len(p[1])
length(p[1])
length(p[[1])
length(p[[1]])
besthospital <- function(x) {
x[20]
}
p<-tapply(d$Hospital.Name, d$State, besthospital)
p
p[1]
p(1)
length(p(1))
length(p[1]
)
length(p[[1]])
str(p[1])
colnames(p)
rownames(p)
data.frame(as.list(p))
c<-data.frame(as.list(p))
str(c)
p.names
p$names
names(p)
values(p)
value(p)
?data.frame
data.frame(p, names(p))
## create a function to use in tapply to return the num of hospital
numhospital <- function(x, n) {
if (n=="best") {
x[1]
} else if (n=="worst") {
x[length(x)]
} else {
x[n]
}
}
p<-tapply(d$Hospital.Name, d$State, numhospital, 20)
p
p<-tapply(d$Hospital.Name, d$State, numhospital, "worst")
p
source('~/GitHub/datasciencecoursera/Rprogramming/hw#3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/GitHub/datasciencecoursera/Rprogramming/hw#3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/GitHub/datasciencecoursera/Rprogramming/hw#3/rankall.R')
head(rankall("heart attack", 20), 10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
exit()
quit()
